name: Build Actions

on:
    push:
        tags:
            - 'v*.*.*'

jobs:
  releaseBuildsForSomePlatforms:
    name: Release Builds
    runs-on: ubuntu-latest
    needs: buildAndTestForSomePlatforms
    steps:
      - name: Set env
        uses: actions/checkout@v1
        run: echo "RELEASE_VERSION=$(echo ${GITHUB_REF:10})" >> $GITHUB_ENV
      - name: Download site content
        uses: actions/download_artifact@v2
        with:
          name: Build_StandaloneWindows64_${{ env.RELEASE_VERSION }}
      - name: Archive site content
        uses: thedoctor0/zip-release@master
        with:
          filename: Windows_x64.zip
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
      - name: Upload Binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Windows_x64.zip
          asset_name: CAC-${{ env.RELEASE_VERSION }}_Windows_x64.zip
          asset_content_type: application/zip
  buildAndTestForSomePlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - Client
        unityVersion:
          - 2019.4.1f1
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
    steps:
      - uses: actions/checkout@v1
      - name: Set env
        run: echo "RELEASE_VERSION=$(echo ${GITHUB_REF:10})" >> $GITHUB_ENV
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v2
        with:
          name: Build_${{ matrix.targetPlatform }}_${{ env.RELEASE_VERSION }}
          path: build